//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/NickCuthbert/IdeaProjects/ProtobufGrammar/src\ProtocolBuffers3.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WhereIsMyTransport.Protobuf {
using System;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class ProtocolBuffers3Lexer : Lexer {
	public const int
		WS=1, COMMENT=2, LINE_COMMENT=3, BuiltInTypes=4, AssignmentOperator=5, 
		ExpressionSeparator=6, SyntaxKeyword=7, LanguageVersionConstant=8, ImportKeyword=9, 
		ImportModifier=10, RepeatedKeyword=11, PackageKeyword=12, OneOfKeyword=13, 
		MapKeyword=14, OptionKeyword=15, EnumKeyword=16, MessageKeyword=17, ServiceKeyword=18, 
		RpcKeyword=19, StreamKeyword=20, ReturnsKeyword=21, GenericTypeOpen=22, 
		GenericTypeClose=23, ToKeyword=24, ReservedKeyword=25, ListSeparator=26, 
		OptionsOpen=27, OptionsClose=28, BodyOpen=29, BodyClose=30, GroupingOpen=31, 
		GroupingClose=32, BooleanLiteral=33, Identifier=34, FullIdentifier=35, 
		Dot=36, Letter=37, Sign=38, IntegerLiteral=39, DecimalLiteral=40, DecimalDigit=41, 
		NonZeroDecimalDigit=42, OctalDigit=43, HexDigit=44, OctalLiteral=45, HexLiteral=46, 
		FloatLiteral=47, Exponent=48, Decimals=49, SingleQuote=50, DoubleQuote=51, 
		CharValue=52, HexEscape=53, OctalEscape=54, CharEscape=55, StringLiteral=56, 
		EmptyStatement=57;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "COMMENT", "LINE_COMMENT", "BuiltInTypes", "AssignmentOperator", 
		"ExpressionSeparator", "SyntaxKeyword", "LanguageVersionConstant", "ImportKeyword", 
		"ImportModifier", "RepeatedKeyword", "PackageKeyword", "OneOfKeyword", 
		"MapKeyword", "OptionKeyword", "EnumKeyword", "MessageKeyword", "ServiceKeyword", 
		"RpcKeyword", "StreamKeyword", "ReturnsKeyword", "GenericTypeOpen", "GenericTypeClose", 
		"ToKeyword", "ReservedKeyword", "ListSeparator", "OptionsOpen", "OptionsClose", 
		"BodyOpen", "BodyClose", "GroupingOpen", "GroupingClose", "BooleanLiteral", 
		"Identifier", "FullIdentifier", "Dot", "Letter", "Sign", "IntegerLiteral", 
		"DecimalLiteral", "DecimalDigit", "NonZeroDecimalDigit", "OctalDigit", 
		"HexDigit", "OctalLiteral", "HexLiteral", "FloatLiteral", "Exponent", 
		"Decimals", "SingleQuote", "DoubleQuote", "CharValue", "HexEscape", "OctalEscape", 
		"CharEscape", "StringLiteral", "EmptyStatement"
	};


	public ProtocolBuffers3Lexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'='", null, "'syntax'", null, "'import'", 
		null, "'repeated'", "'package'", "'oneof'", "'map'", "'option'", "'enum'", 
		"'message'", "'service'", "'rpc'", "'stream'", "'returns'", "'<'", "'>'", 
		"'to'", "'reserved'", "','", "'['", "']'", "'{'", "'}'", "'('", "')'", 
		null, null, null, "'.'", null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "'''", "'\"'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "COMMENT", "LINE_COMMENT", "BuiltInTypes", "AssignmentOperator", 
		"ExpressionSeparator", "SyntaxKeyword", "LanguageVersionConstant", "ImportKeyword", 
		"ImportModifier", "RepeatedKeyword", "PackageKeyword", "OneOfKeyword", 
		"MapKeyword", "OptionKeyword", "EnumKeyword", "MessageKeyword", "ServiceKeyword", 
		"RpcKeyword", "StreamKeyword", "ReturnsKeyword", "GenericTypeOpen", "GenericTypeClose", 
		"ToKeyword", "ReservedKeyword", "ListSeparator", "OptionsOpen", "OptionsClose", 
		"BodyOpen", "BodyClose", "GroupingOpen", "GroupingClose", "BooleanLiteral", 
		"Identifier", "FullIdentifier", "Dot", "Letter", "Sign", "IntegerLiteral", 
		"DecimalLiteral", "DecimalDigit", "NonZeroDecimalDigit", "OctalDigit", 
		"HexDigit", "OctalLiteral", "HexLiteral", "FloatLiteral", "Exponent", 
		"Decimals", "SingleQuote", "DoubleQuote", "CharValue", "HexEscape", "OctalEscape", 
		"CharEscape", "StringLiteral", "EmptyStatement"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ProtocolBuffers3.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	private static string _serializedATN = _serializeATN();
	private static string _serializeATN()
	{
	    StringBuilder sb = new StringBuilder();
	    sb.Append("\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2;\x21C");
		sb.Append("\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6");
		sb.Append("\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r");
		sb.Append("\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4\x12");
		sb.Append("\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15\x4\x16\t\x16\x4");
		sb.Append("\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B\t\x1B");
		sb.Append("\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t ");
		sb.Append("\x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t");
		sb.Append("(\x4)\t)\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t");
		sb.Append("\x30\x4\x31\t\x31\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4");
		sb.Append("\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37\x4\x38\t\x38\x4\x39\t\x39");
		sb.Append("\x4:\t:\x3\x2\x6\x2w\n\x2\r\x2\xE\x2x\x3\x2\x3\x2\x3\x3\x3\x3");
		sb.Append("\x3\x3\x3\x3\a\x3\x81\n\x3\f\x3\xE\x3\x84\v\x3\x3\x3\x3\x3\x3");
		sb.Append("\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\a\x4\x8F\n\x4\f\x4\xE");
		sb.Append("\x4\x92\v\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5\xF0\n\x5\x3\x6\x3\x6\x3\a\x3");
		sb.Append("\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3");
		sb.Append("\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x5");
		sb.Append("\t\x10D\n\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3");
		sb.Append("\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x5\v\x120\n\v\x3\f\x3");
		sb.Append("\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3");
		sb.Append("\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF");
		sb.Append("\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10");
		sb.Append("\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3");
		sb.Append("\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13");
		sb.Append("\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3");
		sb.Append("\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16");
		sb.Append("\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3");
		sb.Append("\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A");
		sb.Append("\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3");
		sb.Append("\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3");
		sb.Append(" \x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"");
		sb.Append("\x193\n\"\x3#\x3#\x3#\x3#\a#\x199\n#\f#\xE#\x19C\v#\x3$\x3$");
		sb.Append("\x3$\x3$\a$\x1A2\n$\f$\xE$\x1A5\v$\x3%\x3%\x3&\x3&\x3\'\x3\'");
		sb.Append("\x3(\x3(\x3(\x5(\x1B0\n(\x3)\x3)\a)\x1B4\n)\f)\xE)\x1B7\v)\x3");
		sb.Append("*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3.\x6.\x1C4\n.\r.\xE");
		sb.Append(".\x1C5\x5.\x1C8\n.\x3/\x3/\x3/\x6/\x1CD\n/\r/\xE/\x1CE\x3\x30");
		sb.Append("\x3\x30\x3\x30\x5\x30\x1D4\n\x30\x3\x30\x5\x30\x1D7\n\x30\x3");
		sb.Append("\x30\x3\x30\x3\x30\x3\x30\x3\x30\x3\x30\x5\x30\x1DF\n\x30\x5");
		sb.Append("\x30\x1E1\n\x30\x3\x31\x3\x31\x5\x31\x1E5\n\x31\x3\x31\x3\x31");
		sb.Append("\x3\x32\x6\x32\x1EA\n\x32\r\x32\xE\x32\x1EB\x3\x33\x3\x33\x3");
		sb.Append("\x34\x3\x34\x3\x35\x3\x35\x3\x35\x3\x35\x5\x35\x1F6\n\x35\x3");
		sb.Append("\x36\x3\x36\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37\x3\x37");
		sb.Append("\x3\x37\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39\a\x39\x207\n\x39");
		sb.Append("\f\x39\xE\x39\x20A\v\x39\x3\x39\x3\x39\x3\x39\x3\x39\a\x39\x210");
		sb.Append("\n\x39\f\x39\xE\x39\x213\v\x39\x3\x39\x3\x39\x5\x39\x217\n\x39");
		sb.Append("\x3:\x3:\x3:\x3:\x3\x82\x2;\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF");
		sb.Append("\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11!\x12");
		sb.Append("#\x13%\x14\'\x15)\x16+\x17-\x18/\x19\x31\x1A\x33\x1B\x35\x1C");
		sb.Append("\x37\x1D\x39\x1E;\x1F= ?!\x41\"\x43#\x45$G%I&K\'M(O)Q*S+U,W");
		sb.Append("-Y.[/]\x30_\x31\x61\x32\x63\x33\x65\x34g\x35i\x36k\x37m\x38");
		sb.Append("o\x39q:s;\x3\x2\r\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f\xF\xF\x4\x2");
		sb.Append("\x43\\\x63|\x4\x2--//\x3\x2\x32;\x3\x2\x33;\x5\x2\x32;\x43H");
		sb.Append("\x63h\x4\x2ZZzz\x4\x2GGgg\x5\x2\f\f\x32\x32^^\v\x2$$))^^\x63");
		sb.Append("\x64hhppttvvxx\x246\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a");
		sb.Append("\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2");
		sb.Append("\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2");
		sb.Append("\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2");
		sb.Append("\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3");
		sb.Append("\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2");
		sb.Append(")\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2");
		sb.Append("\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2");
		sb.Append("\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2");
		sb.Append("\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2");
		sb.Append("\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2");
		sb.Append("\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3");
		sb.Append("\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2");
		sb.Append("[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2");
		sb.Append("\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2");
		sb.Append("i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2");
		sb.Append("\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x3v\x3\x2\x2\x2\x5|\x3\x2\x2");
		sb.Append("\x2\a\x8A\x3\x2\x2\x2\t\xEF\x3\x2\x2\x2\v\xF1\x3\x2\x2\x2\r");
		sb.Append("\xF3\x3\x2\x2\x2\xF\xF5\x3\x2\x2\x2\x11\x10C\x3\x2\x2\x2\x13");
		sb.Append("\x10E\x3\x2\x2\x2\x15\x11F\x3\x2\x2\x2\x17\x121\x3\x2\x2\x2");
		sb.Append("\x19\x12A\x3\x2\x2\x2\x1B\x132\x3\x2\x2\x2\x1D\x138\x3\x2\x2");
		sb.Append("\x2\x1F\x13C\x3\x2\x2\x2!\x143\x3\x2\x2\x2#\x148\x3\x2\x2\x2");
		sb.Append("%\x150\x3\x2\x2\x2\'\x158\x3\x2\x2\x2)\x15C\x3\x2\x2\x2+\x163");
		sb.Append("\x3\x2\x2\x2-\x16B\x3\x2\x2\x2/\x16D\x3\x2\x2\x2\x31\x16F\x3");
		sb.Append("\x2\x2\x2\x33\x172\x3\x2\x2\x2\x35\x17B\x3\x2\x2\x2\x37\x17D");
		sb.Append("\x3\x2\x2\x2\x39\x17F\x3\x2\x2\x2;\x181\x3\x2\x2\x2=\x183\x3");
		sb.Append("\x2\x2\x2?\x185\x3\x2\x2\x2\x41\x187\x3\x2\x2\x2\x43\x192\x3");
		sb.Append("\x2\x2\x2\x45\x194\x3\x2\x2\x2G\x19D\x3\x2\x2\x2I\x1A6\x3\x2");
		sb.Append("\x2\x2K\x1A8\x3\x2\x2\x2M\x1AA\x3\x2\x2\x2O\x1AF\x3\x2\x2\x2");
		sb.Append("Q\x1B1\x3\x2\x2\x2S\x1B8\x3\x2\x2\x2U\x1BA\x3\x2\x2\x2W\x1BC");
		sb.Append("\x3\x2\x2\x2Y\x1BE\x3\x2\x2\x2[\x1C7\x3\x2\x2\x2]\x1C9\x3\x2");
		sb.Append("\x2\x2_\x1E0\x3\x2\x2\x2\x61\x1E2\x3\x2\x2\x2\x63\x1E9\x3\x2");
		sb.Append("\x2\x2\x65\x1ED\x3\x2\x2\x2g\x1EF\x3\x2\x2\x2i\x1F5\x3\x2\x2");
		sb.Append("\x2k\x1F7\x3\x2\x2\x2m\x1FC\x3\x2\x2\x2o\x201\x3\x2\x2\x2q\x216");
		sb.Append("\x3\x2\x2\x2s\x218\x3\x2\x2\x2uw\t\x2\x2\x2vu\x3\x2\x2\x2wx");
		sb.Append("\x3\x2\x2\x2xv\x3\x2\x2\x2xy\x3\x2\x2\x2yz\x3\x2\x2\x2z{\b\x2");
		sb.Append("\x2\x2{\x4\x3\x2\x2\x2|}\a\x31\x2\x2}~\a,\x2\x2~\x82\x3\x2\x2");
		sb.Append("\x2\x7F\x81\v\x2\x2\x2\x80\x7F\x3\x2\x2\x2\x81\x84\x3\x2\x2");
		sb.Append("\x2\x82\x83\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x83\x85\x3\x2\x2");
		sb.Append("\x2\x84\x82\x3\x2\x2\x2\x85\x86\a,\x2\x2\x86\x87\a\x31\x2\x2");
		sb.Append("\x87\x88\x3\x2\x2\x2\x88\x89\b\x3\x2\x2\x89\x6\x3\x2\x2\x2\x8A");
		sb.Append("\x8B\a\x31\x2\x2\x8B\x8C\a\x31\x2\x2\x8C\x90\x3\x2\x2\x2\x8D");
		sb.Append("\x8F\n\x3\x2\x2\x8E\x8D\x3\x2\x2\x2\x8F\x92\x3\x2\x2\x2\x90");
		sb.Append("\x8E\x3\x2\x2\x2\x90\x91\x3\x2\x2\x2\x91\x93\x3\x2\x2\x2\x92");
		sb.Append("\x90\x3\x2\x2\x2\x93\x94\b\x4\x2\x2\x94\b\x3\x2\x2\x2\x95\x96");
		sb.Append("\a\x66\x2\x2\x96\x97\aq\x2\x2\x97\x98\aw\x2\x2\x98\x99\a\x64");
		sb.Append("\x2\x2\x99\x9A\an\x2\x2\x9A\xF0\ag\x2\x2\x9B\x9C\ah\x2\x2\x9C");
		sb.Append("\x9D\an\x2\x2\x9D\x9E\aq\x2\x2\x9E\x9F\a\x63\x2\x2\x9F\xF0\a");
		sb.Append("v\x2\x2\xA0\xA1\ak\x2\x2\xA1\xA2\ap\x2\x2\xA2\xA3\av\x2\x2\xA3");
		sb.Append("\xA4\a\x35\x2\x2\xA4\xF0\a\x34\x2\x2\xA5\xA6\ak\x2\x2\xA6\xA7");
		sb.Append("\ap\x2\x2\xA7\xA8\av\x2\x2\xA8\xA9\a\x38\x2\x2\xA9\xF0\a\x36");
		sb.Append("\x2\x2\xAA\xAB\aw\x2\x2\xAB\xAC\ak\x2\x2\xAC\xAD\ap\x2\x2\xAD");
		sb.Append("\xAE\av\x2\x2\xAE\xAF\a\x35\x2\x2\xAF\xF0\a\x34\x2\x2\xB0\xB1");
		sb.Append("\aw\x2\x2\xB1\xB2\ak\x2\x2\xB2\xB3\ap\x2\x2\xB3\xB4\av\x2\x2");
		sb.Append("\xB4\xB5\a\x38\x2\x2\xB5\xF0\a\x36\x2\x2\xB6\xB7\au\x2\x2\xB7");
		sb.Append("\xB8\ak\x2\x2\xB8\xB9\ap\x2\x2\xB9\xBA\av\x2\x2\xBA\xBB\a\x35");
		sb.Append("\x2\x2\xBB\xF0\a\x34\x2\x2\xBC\xBD\au\x2\x2\xBD\xBE\ak\x2\x2");
		sb.Append("\xBE\xBF\ap\x2\x2\xBF\xC0\av\x2\x2\xC0\xC1\a\x38\x2\x2\xC1\xF0");
		sb.Append("\a\x36\x2\x2\xC2\xC3\ah\x2\x2\xC3\xC4\ak\x2\x2\xC4\xC5\az\x2");
		sb.Append("\x2\xC5\xC6\ag\x2\x2\xC6\xC7\a\x66\x2\x2\xC7\xC8\a\x35\x2\x2");
		sb.Append("\xC8\xF0\a\x34\x2\x2\xC9\xCA\ah\x2\x2\xCA\xCB\ak\x2\x2\xCB\xCC");
		sb.Append("\az\x2\x2\xCC\xCD\ag\x2\x2\xCD\xCE\a\x66\x2\x2\xCE\xCF\a\x38");
		sb.Append("\x2\x2\xCF\xF0\a\x36\x2\x2\xD0\xD1\au\x2\x2\xD1\xD2\ah\x2\x2");
		sb.Append("\xD2\xD3\ak\x2\x2\xD3\xD4\az\x2\x2\xD4\xD5\ag\x2\x2\xD5\xD6");
		sb.Append("\a\x66\x2\x2\xD6\xD7\a\x35\x2\x2\xD7\xF0\a\x34\x2\x2\xD8\xD9");
		sb.Append("\au\x2\x2\xD9\xDA\ah\x2\x2\xDA\xDB\ak\x2\x2\xDB\xDC\az\x2\x2");
		sb.Append("\xDC\xDD\ag\x2\x2\xDD\xDE\a\x66\x2\x2\xDE\xDF\a\x38\x2\x2\xDF");
		sb.Append("\xF0\a\x36\x2\x2\xE0\xE1\a\x64\x2\x2\xE1\xE2\aq\x2\x2\xE2\xE3");
		sb.Append("\aq\x2\x2\xE3\xF0\an\x2\x2\xE4\xE5\au\x2\x2\xE5\xE6\av\x2\x2");
		sb.Append("\xE6\xE7\at\x2\x2\xE7\xE8\ak\x2\x2\xE8\xE9\ap\x2\x2\xE9\xF0");
		sb.Append("\ai\x2\x2\xEA\xEB\a\x64\x2\x2\xEB\xEC\a{\x2\x2\xEC\xED\av\x2");
		sb.Append("\x2\xED\xEE\ag\x2\x2\xEE\xF0\au\x2\x2\xEF\x95\x3\x2\x2\x2\xEF");
		sb.Append("\x9B\x3\x2\x2\x2\xEF\xA0\x3\x2\x2\x2\xEF\xA5\x3\x2\x2\x2\xEF");
		sb.Append("\xAA\x3\x2\x2\x2\xEF\xB0\x3\x2\x2\x2\xEF\xB6\x3\x2\x2\x2\xEF");
		sb.Append("\xBC\x3\x2\x2\x2\xEF\xC2\x3\x2\x2\x2\xEF\xC9\x3\x2\x2\x2\xEF");
		sb.Append("\xD0\x3\x2\x2\x2\xEF\xD8\x3\x2\x2\x2\xEF\xE0\x3\x2\x2\x2\xEF");
		sb.Append("\xE4\x3\x2\x2\x2\xEF\xEA\x3\x2\x2\x2\xF0\n\x3\x2\x2\x2\xF1\xF2");
		sb.Append("\a?\x2\x2\xF2\f\x3\x2\x2\x2\xF3\xF4\a=\x2\x2\xF4\xE\x3\x2\x2");
		sb.Append("\x2\xF5\xF6\au\x2\x2\xF6\xF7\a{\x2\x2\xF7\xF8\ap\x2\x2\xF8\xF9");
		sb.Append("\av\x2\x2\xF9\xFA\a\x63\x2\x2\xFA\xFB\az\x2\x2\xFB\x10\x3\x2");
		sb.Append("\x2\x2\xFC\xFD\a)\x2\x2\xFD\xFE\ar\x2\x2\xFE\xFF\at\x2\x2\xFF");
		sb.Append("\x100\aq\x2\x2\x100\x101\av\x2\x2\x101\x102\aq\x2\x2\x102\x103");
		sb.Append("\a\x35\x2\x2\x103\x10D\a)\x2\x2\x104\x105\a$\x2\x2\x105\x106");
		sb.Append("\ar\x2\x2\x106\x107\at\x2\x2\x107\x108\aq\x2\x2\x108\x109\a");
		sb.Append("v\x2\x2\x109\x10A\aq\x2\x2\x10A\x10B\a\x35\x2\x2\x10B\x10D\a");
		sb.Append("$\x2\x2\x10C\xFC\x3\x2\x2\x2\x10C\x104\x3\x2\x2\x2\x10D\x12");
		sb.Append("\x3\x2\x2\x2\x10E\x10F\ak\x2\x2\x10F\x110\ao\x2\x2\x110\x111");
		sb.Append("\ar\x2\x2\x111\x112\aq\x2\x2\x112\x113\at\x2\x2\x113\x114\a");
		sb.Append("v\x2\x2\x114\x14\x3\x2\x2\x2\x115\x116\ay\x2\x2\x116\x117\a");
		sb.Append("g\x2\x2\x117\x118\a\x63\x2\x2\x118\x120\am\x2\x2\x119\x11A\a");
		sb.Append("r\x2\x2\x11A\x11B\aw\x2\x2\x11B\x11C\a\x64\x2\x2\x11C\x11D\a");
		sb.Append("n\x2\x2\x11D\x11E\ak\x2\x2\x11E\x120\a\x65\x2\x2\x11F\x115\x3");
		sb.Append("\x2\x2\x2\x11F\x119\x3\x2\x2\x2\x120\x16\x3\x2\x2\x2\x121\x122");
		sb.Append("\at\x2\x2\x122\x123\ag\x2\x2\x123\x124\ar\x2\x2\x124\x125\a");
		sb.Append("g\x2\x2\x125\x126\a\x63\x2\x2\x126\x127\av\x2\x2\x127\x128\a");
		sb.Append("g\x2\x2\x128\x129\a\x66\x2\x2\x129\x18\x3\x2\x2\x2\x12A\x12B");
		sb.Append("\ar\x2\x2\x12B\x12C\a\x63\x2\x2\x12C\x12D\a\x65\x2\x2\x12D\x12E");
		sb.Append("\am\x2\x2\x12E\x12F\a\x63\x2\x2\x12F\x130\ai\x2\x2\x130\x131");
		sb.Append("\ag\x2\x2\x131\x1A\x3\x2\x2\x2\x132\x133\aq\x2\x2\x133\x134");
		sb.Append("\ap\x2\x2\x134\x135\ag\x2\x2\x135\x136\aq\x2\x2\x136\x137\a");
		sb.Append("h\x2\x2\x137\x1C\x3\x2\x2\x2\x138\x139\ao\x2\x2\x139\x13A\a");
		sb.Append("\x63\x2\x2\x13A\x13B\ar\x2\x2\x13B\x1E\x3\x2\x2\x2\x13C\x13D");
		sb.Append("\aq\x2\x2\x13D\x13E\ar\x2\x2\x13E\x13F\av\x2\x2\x13F\x140\a");
		sb.Append("k\x2\x2\x140\x141\aq\x2\x2\x141\x142\ap\x2\x2\x142 \x3\x2\x2");
		sb.Append("\x2\x143\x144\ag\x2\x2\x144\x145\ap\x2\x2\x145\x146\aw\x2\x2");
		sb.Append("\x146\x147\ao\x2\x2\x147\"\x3\x2\x2\x2\x148\x149\ao\x2\x2\x149");
		sb.Append("\x14A\ag\x2\x2\x14A\x14B\au\x2\x2\x14B\x14C\au\x2\x2\x14C\x14D");
		sb.Append("\a\x63\x2\x2\x14D\x14E\ai\x2\x2\x14E\x14F\ag\x2\x2\x14F$\x3");
		sb.Append("\x2\x2\x2\x150\x151\au\x2\x2\x151\x152\ag\x2\x2\x152\x153\a");
		sb.Append("t\x2\x2\x153\x154\ax\x2\x2\x154\x155\ak\x2\x2\x155\x156\a\x65");
		sb.Append("\x2\x2\x156\x157\ag\x2\x2\x157&\x3\x2\x2\x2\x158\x159\at\x2");
		sb.Append("\x2\x159\x15A\ar\x2\x2\x15A\x15B\a\x65\x2\x2\x15B(\x3\x2\x2");
		sb.Append("\x2\x15C\x15D\au\x2\x2\x15D\x15E\av\x2\x2\x15E\x15F\at\x2\x2");
		sb.Append("\x15F\x160\ag\x2\x2\x160\x161\a\x63\x2\x2\x161\x162\ao\x2\x2");
		sb.Append("\x162*\x3\x2\x2\x2\x163\x164\at\x2\x2\x164\x165\ag\x2\x2\x165");
		sb.Append("\x166\av\x2\x2\x166\x167\aw\x2\x2\x167\x168\at\x2\x2\x168\x169");
		sb.Append("\ap\x2\x2\x169\x16A\au\x2\x2\x16A,\x3\x2\x2\x2\x16B\x16C\a>");
		sb.Append("\x2\x2\x16C.\x3\x2\x2\x2\x16D\x16E\a@\x2\x2\x16E\x30\x3\x2\x2");
		sb.Append("\x2\x16F\x170\av\x2\x2\x170\x171\aq\x2\x2\x171\x32\x3\x2\x2");
		sb.Append("\x2\x172\x173\at\x2\x2\x173\x174\ag\x2\x2\x174\x175\au\x2\x2");
		sb.Append("\x175\x176\ag\x2\x2\x176\x177\at\x2\x2\x177\x178\ax\x2\x2\x178");
		sb.Append("\x179\ag\x2\x2\x179\x17A\a\x66\x2\x2\x17A\x34\x3\x2\x2\x2\x17B");
		sb.Append("\x17C\a.\x2\x2\x17C\x36\x3\x2\x2\x2\x17D\x17E\a]\x2\x2\x17E");
		sb.Append("\x38\x3\x2\x2\x2\x17F\x180\a_\x2\x2\x180:\x3\x2\x2\x2\x181\x182");
		sb.Append("\a}\x2\x2\x182<\x3\x2\x2\x2\x183\x184\a\x7F\x2\x2\x184>\x3\x2");
		sb.Append("\x2\x2\x185\x186\a*\x2\x2\x186@\x3\x2\x2\x2\x187\x188\a+\x2");
		sb.Append("\x2\x188\x42\x3\x2\x2\x2\x189\x18A\av\x2\x2\x18A\x18B\at\x2");
		sb.Append("\x2\x18B\x18C\aw\x2\x2\x18C\x193\ag\x2\x2\x18D\x18E\ah\x2\x2");
		sb.Append("\x18E\x18F\a\x63\x2\x2\x18F\x190\an\x2\x2\x190\x191\au\x2\x2");
		sb.Append("\x191\x193\ag\x2\x2\x192\x189\x3\x2\x2\x2\x192\x18D\x3\x2\x2");
		sb.Append("\x2\x193\x44\x3\x2\x2\x2\x194\x19A\x5K&\x2\x195\x199\x5K&\x2");
		sb.Append("\x196\x199\x5S*\x2\x197\x199\a\x61\x2\x2\x198\x195\x3\x2\x2");
		sb.Append("\x2\x198\x196\x3\x2\x2\x2\x198\x197\x3\x2\x2\x2\x199\x19C\x3");
		sb.Append("\x2\x2\x2\x19A\x198\x3\x2\x2\x2\x19A\x19B\x3\x2\x2\x2\x19B\x46");
		sb.Append("\x3\x2\x2\x2\x19C\x19A\x3\x2\x2\x2\x19D\x1A3\x5\x45#\x2\x19E");
		sb.Append("\x19F\x5I%\x2\x19F\x1A0\x5\x45#\x2\x1A0\x1A2\x3\x2\x2\x2\x1A1");
		sb.Append("\x19E\x3\x2\x2\x2\x1A2\x1A5\x3\x2\x2\x2\x1A3\x1A1\x3\x2\x2\x2");
		sb.Append("\x1A3\x1A4\x3\x2\x2\x2\x1A4H\x3\x2\x2\x2\x1A5\x1A3\x3\x2\x2");
		sb.Append("\x2\x1A6\x1A7\a\x30\x2\x2\x1A7J\x3\x2\x2\x2\x1A8\x1A9\t\x4\x2");
		sb.Append("\x2\x1A9L\x3\x2\x2\x2\x1AA\x1AB\t\x5\x2\x2\x1ABN\x3\x2\x2\x2");
		sb.Append("\x1AC\x1B0\x5Q)\x2\x1AD\x1B0\x5[.\x2\x1AE\x1B0\x5]/\x2\x1AF");
		sb.Append("\x1AC\x3\x2\x2\x2\x1AF\x1AD\x3\x2\x2\x2\x1AF\x1AE\x3\x2\x2\x2");
		sb.Append("\x1B0P\x3\x2\x2\x2\x1B1\x1B5\x5U+\x2\x1B2\x1B4\x5S*\x2\x1B3");
		sb.Append("\x1B2\x3\x2\x2\x2\x1B4\x1B7\x3\x2\x2\x2\x1B5\x1B3\x3\x2\x2\x2");
		sb.Append("\x1B5\x1B6\x3\x2\x2\x2\x1B6R\x3\x2\x2\x2\x1B7\x1B5\x3\x2\x2");
		sb.Append("\x2\x1B8\x1B9\t\x6\x2\x2\x1B9T\x3\x2\x2\x2\x1BA\x1BB\t\a\x2");
		sb.Append("\x2\x1BBV\x3\x2\x2\x2\x1BC\x1BD\x4\x32\x39\x2\x1BDX\x3\x2\x2");
		sb.Append("\x2\x1BE\x1BF\t\b\x2\x2\x1BFZ\x3\x2\x2\x2\x1C0\x1C8\a\x32\x2");
		sb.Append("\x2\x1C1\x1C3\a\x32\x2\x2\x1C2\x1C4\x5W,\x2\x1C3\x1C2\x3\x2");
		sb.Append("\x2\x2\x1C4\x1C5\x3\x2\x2\x2\x1C5\x1C3\x3\x2\x2\x2\x1C5\x1C6");
		sb.Append("\x3\x2\x2\x2\x1C6\x1C8\x3\x2\x2\x2\x1C7\x1C0\x3\x2\x2\x2\x1C7");
		sb.Append("\x1C1\x3\x2\x2\x2\x1C8\\\x3\x2\x2\x2\x1C9\x1CA\a\x32\x2\x2\x1CA");
		sb.Append("\x1CC\t\t\x2\x2\x1CB\x1CD\x5Y-\x2\x1CC\x1CB\x3\x2\x2\x2\x1CD");
		sb.Append("\x1CE\x3\x2\x2\x2\x1CE\x1CC\x3\x2\x2\x2\x1CE\x1CF\x3\x2\x2\x2");
		sb.Append("\x1CF^\x3\x2\x2\x2\x1D0\x1D1\x5\x63\x32\x2\x1D1\x1D3\x5I%\x2");
		sb.Append("\x1D2\x1D4\x5\x63\x32\x2\x1D3\x1D2\x3\x2\x2\x2\x1D3\x1D4\x3");
		sb.Append("\x2\x2\x2\x1D4\x1D6\x3\x2\x2\x2\x1D5\x1D7\x5\x61\x31\x2\x1D6");
		sb.Append("\x1D5\x3\x2\x2\x2\x1D6\x1D7\x3\x2\x2\x2\x1D7\x1E1\x3\x2\x2\x2");
		sb.Append("\x1D8\x1D9\x5\x63\x32\x2\x1D9\x1DA\x5\x61\x31\x2\x1DA\x1E1\x3");
		sb.Append("\x2\x2\x2\x1DB\x1DC\x5I%\x2\x1DC\x1DE\x5\x63\x32\x2\x1DD\x1DF");
		sb.Append("\x5\x61\x31\x2\x1DE\x1DD\x3\x2\x2\x2\x1DE\x1DF\x3\x2\x2\x2\x1DF");
		sb.Append("\x1E1\x3\x2\x2\x2\x1E0\x1D0\x3\x2\x2\x2\x1E0\x1D8\x3\x2\x2\x2");
		sb.Append("\x1E0\x1DB\x3\x2\x2\x2\x1E1`\x3\x2\x2\x2\x1E2\x1E4\t\n\x2\x2");
		sb.Append("\x1E3\x1E5\x5M\'\x2\x1E4\x1E3\x3\x2\x2\x2\x1E4\x1E5\x3\x2\x2");
		sb.Append("\x2\x1E5\x1E6\x3\x2\x2\x2\x1E6\x1E7\x5\x63\x32\x2\x1E7\x62\x3");
		sb.Append("\x2\x2\x2\x1E8\x1EA\x5S*\x2\x1E9\x1E8\x3\x2\x2\x2\x1EA\x1EB");
		sb.Append("\x3\x2\x2\x2\x1EB\x1E9\x3\x2\x2\x2\x1EB\x1EC\x3\x2\x2\x2\x1EC");
		sb.Append("\x64\x3\x2\x2\x2\x1ED\x1EE\a)\x2\x2\x1EE\x66\x3\x2\x2\x2\x1EF");
		sb.Append("\x1F0\a$\x2\x2\x1F0h\x3\x2\x2\x2\x1F1\x1F6\x5k\x36\x2\x1F2\x1F6");
		sb.Append("\x5m\x37\x2\x1F3\x1F6\x5o\x38\x2\x1F4\x1F6\n\v\x2\x2\x1F5\x1F1");
		sb.Append("\x3\x2\x2\x2\x1F5\x1F2\x3\x2\x2\x2\x1F5\x1F3\x3\x2\x2\x2\x1F5");
		sb.Append("\x1F4\x3\x2\x2\x2\x1F6j\x3\x2\x2\x2\x1F7\x1F8\a^\x2\x2\x1F8");
		sb.Append("\x1F9\t\t\x2\x2\x1F9\x1FA\x5Y-\x2\x1FA\x1FB\x5Y-\x2\x1FBl\x3");
		sb.Append("\x2\x2\x2\x1FC\x1FD\a^\x2\x2\x1FD\x1FE\x5W,\x2\x1FE\x1FF\x5");
		sb.Append("W,\x2\x1FF\x200\x5W,\x2\x200n\x3\x2\x2\x2\x201\x202\a^\x2\x2");
		sb.Append("\x202\x203\t\f\x2\x2\x203p\x3\x2\x2\x2\x204\x208\x5\x65\x33");
		sb.Append("\x2\x205\x207\x5i\x35\x2\x206\x205\x3\x2\x2\x2\x207\x20A\x3");
		sb.Append("\x2\x2\x2\x208\x206\x3\x2\x2\x2\x208\x209\x3\x2\x2\x2\x209\x20B");
		sb.Append("\x3\x2\x2\x2\x20A\x208\x3\x2\x2\x2\x20B\x20C\x5\x65\x33\x2\x20C");
		sb.Append("\x217\x3\x2\x2\x2\x20D\x211\x5g\x34\x2\x20E\x210\x5i\x35\x2");
		sb.Append("\x20F\x20E\x3\x2\x2\x2\x210\x213\x3\x2\x2\x2\x211\x20F\x3\x2");
		sb.Append("\x2\x2\x211\x212\x3\x2\x2\x2\x212\x214\x3\x2\x2\x2\x213\x211");
		sb.Append("\x3\x2\x2\x2\x214\x215\x5g\x34\x2\x215\x217\x3\x2\x2\x2\x216");
		sb.Append("\x204\x3\x2\x2\x2\x216\x20D\x3\x2\x2\x2\x217r\x3\x2\x2\x2\x218");
		sb.Append("\x219\a=\x2\x2\x219\x21A\x3\x2\x2\x2\x21A\x21B\b:\x2\x2\x21B");
		sb.Append("t\x3\x2\x2\x2\x1C\x2x\x82\x90\xEF\x10C\x11F\x192\x198\x19A\x1A3");
		sb.Append("\x1AF\x1B5\x1C5\x1C7\x1CE\x1D3\x1D6\x1DE\x1E0\x1E4\x1EB\x1F5");
		sb.Append("\x208\x211\x216\x3\b\x2\x2");
	    return sb.ToString();
	}

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace WhereIsMyTransport.Protobuf
